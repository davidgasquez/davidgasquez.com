---
import Base from "./Base.astro";
import SearchModal from "../components/SearchModal.astro";
import { getCollection } from "astro:content";

export interface Props {
  currentSlug?: string;
}

const { currentSlug } = Astro.props;

// Get all handbook entries for sidebar navigation
const handbookEntries = await getCollection("handbook");

// Function to extract the first header from markdown content
function extractFirstHeader(content: string): string | null {
  const headerMatch = content.match(/^#\s+(.+)$/m);
  return headerMatch ? headerMatch[1].trim() : null;
}

// Sort entries alphabetically by title or filename
const sortedEntries = handbookEntries
  .filter((entry) => entry.id !== "README") // Exclude README
  .map((entry) => {
    const title =
      entry.data.title || extractFirstHeader(entry.body || "") || entry.id.replace(/\.md$/, "").replace(/^.*\//, "");
    return {
      ...entry,
      displayTitle: title,
    };
  })
  .sort((a, b) => a.displayTitle.localeCompare(b.displayTitle));
---

<Base>
  <div class="handbook-container">
    <!-- Sidebar -->
    <aside id="handbook-sidebar" class="handbook-sidebar">
      <nav>
        <div class="handbook-header">
          <h2 class="handbook-nav-title">Notes</h2>
          <button id="search-trigger" class="search-trigger" onclick="showSearchModal()">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
          </button>
        </div>
        <ul class="handbook-nav-list">
          {
            sortedEntries.map((entry) => {
              const isActive = currentSlug === entry.id;
              return (
                <li>
                  <a href={`/handbook/${entry.id}`} class:list={["handbook-nav-link", { active: isActive }]}>
                    {entry.displayTitle}
                  </a>
                </li>
              );
            })
          }
        </ul>
      </nav>
    </aside>

    <!-- Main content -->
    <main class="handbook-main">
      <!-- Mobile toggle button -->
      <button id="sidebar-toggle" class="sidebar-toggle">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="3" y1="12" x2="21" y2="12"></line>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
        <span>Notes</span>
      </button>
      <div class="prose mx-auto">
        <slot />
      </div>
    </main>
  </div>

  <SearchModal />

  <script>
    const sidebar = document.getElementById("handbook-sidebar");
    const toggle = document.getElementById("sidebar-toggle");
    const container = document.querySelector(".handbook-container");

    toggle?.addEventListener("click", () => {
      sidebar?.classList.toggle("show");
      container?.classList.toggle("sidebar-open");
    });

    // Close sidebar on mobile when clicking outside
    document.addEventListener("click", (e) => {
      if (window.innerWidth > 768 || !sidebar?.classList.contains("show")) return;

      const target = e.target as HTMLElement;
      if (!sidebar.contains(target) && !toggle?.contains(target)) {
        sidebar.classList.remove("show");
        container?.classList.remove("sidebar-open");
      }
    });
  </script>

  <style>
    .handbook-container {
      display: flex;
      gap: var(--spacing-xl);
      max-width: none;
      position: relative;
    }

    .sidebar-toggle {
      display: none;
      background: var(--color-background);
      border: 1px solid var(--color-border);
      border-radius: 4px;
      padding: var(--spacing-sm) var(--spacing-md);
      color: var(--color-text-muted);
      cursor: pointer;
      transition: all 0.2s;
      align-items: center;
      gap: var(--spacing-sm);
      margin-bottom: var(--spacing-lg);
    }

    .sidebar-toggle:hover {
      color: var(--color-text);
      background-color: var(--color-background-hover);
    }

    .handbook-sidebar {
      width: 250px;
      flex-shrink: 0;
      position: sticky;
      top: var(--spacing-md);
      height: fit-content;
      max-height: calc(100vh - var(--spacing-xl));
      overflow-y: auto;
      overflow-x: hidden;
      padding-right: var(--spacing-md);
      transition: transform 0.3s;
    }

    .handbook-sidebar::-webkit-scrollbar {
      width: 6px;
    }

    .handbook-sidebar::-webkit-scrollbar-thumb {
      background: var(--color-border);
      border-radius: 3px;
    }

    .handbook-sidebar::-webkit-scrollbar-thumb:hover {
      background: var(--color-background-hover);
    }

    .handbook-main {
      flex: 1;
      min-width: 0;
      max-width: 65ch;
    }

    .handbook-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: var(--spacing-md);
    }

    .handbook-nav-title {
      font-size: 1.125rem;
      font-weight: 600;
      margin: 0;
      color: var(--color-accent);
    }

    .search-trigger {
      background: none;
      border: 1px solid var(--color-border);
      border-radius: 4px;
      padding: var(--spacing-sm);
      color: var(--color-text-muted);
      cursor: pointer;
      transition: all 0.2s;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .search-trigger:hover {
      color: var(--color-text);
      background-color: var(--color-background-hover);
    }

    .handbook-nav-list {
      list-style: none;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      gap: var(--spacing-xs);
    }

    .handbook-nav-link {
      display: block;
      padding: var(--spacing-sm);
      font-size: 0.875rem;
      color: var(--color-text-muted);
      text-decoration: none;
      border-radius: 4px;
      transition: all 0.2s;
      word-wrap: break-word;
      line-height: 1.3;
    }

    .handbook-nav-link:hover {
      color: var(--color-text);
      background-color: var(--color-background-hover);
    }

    .handbook-nav-link.active {
      color: var(--color-text);
      background-color: var(--color-background-active);
      font-weight: 500;
    }

    /* Mobile styles */
    @media (max-width: 768px) {
      .sidebar-toggle {
        display: flex;
      }

      .handbook-sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        background: var(--color-background);
        border-right: 1px solid var(--color-border);
        transform: translateX(-100%);
        z-index: 50;
        padding: calc(var(--spacing-xl) * 2) var(--spacing-md) var(--spacing-md);
      }

      .handbook-sidebar.show {
        transform: translateX(0);
      }

      .handbook-main {
        max-width: none;
      }

      .handbook-container {
        gap: 0;
      }

      .handbook-container.sidebar-open::before {
        content: "";
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 40;
      }
    }
  </style>
</Base>
